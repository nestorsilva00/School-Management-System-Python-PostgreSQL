# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'asignaturas1.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from service import Curso_Service
from service import Asignatura_Service
from service import Anno_Service
from view.Asignaturas.modificar_asignatura import Ui_DialogModificar_Asignatura
from view.Asignaturas.insertar_asignatura import Ui_DialogInsertar


class Ui_DialogAsignaturas(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(395, 300)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(90, 20, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.comboBoxCurso = QtWidgets.QComboBox(Dialog)
        self.comboBoxCurso.setGeometry(QtCore.QRect(290, 50, 91, 22))
        self.comboBoxCurso.setObjectName("comboBoxCurso")
        self.comboBoxAnno = QtWidgets.QComboBox(Dialog)
        self.comboBoxAnno.setGeometry(QtCore.QRect(290, 110, 91, 22))
        self.comboBoxAnno.setObjectName("comboBoxAnno")
        self.pushButtonModificar = QtWidgets.QPushButton(Dialog)
        self.pushButtonModificar.setGeometry(QtCore.QRect(290, 260, 91, 23))
        self.pushButtonModificar.setObjectName("pushButtonModificar")
        self.pushButtonEliminar = QtWidgets.QPushButton(Dialog)
        self.pushButtonEliminar.setGeometry(QtCore.QRect(290, 200, 91, 23))
        self.pushButtonEliminar.setObjectName("pushButtonEliminar")

        self.pushButtonInsertar = QtWidgets.QPushButton(Dialog)
        self.pushButtonInsertar.setGeometry(QtCore.QRect(290, 230, 91, 23))
        self.pushButtonInsertar.setObjectName("pushButtonInsertar")


        self.tableView = QtWidgets.QTableView(Dialog)
        self.tableView.setGeometry(QtCore.QRect(10, 50, 256, 231))
        self.tableView.setObjectName("tableView")
        self.comboBoxCurso.activated.connect(self.cargar_comboBox_cursos)
        self.comboBoxAnno.activated.connect(self.cargar_tabla_asignaturas)
        self.model = QtGui.QStandardItemModel(self.tableView)
        self.model.setHorizontalHeaderLabels(["Código", "Nombre", "Horas"])
        self.pushButtonModificar.clicked.connect(self.on_pushButtonModificar)
        self.pushButtonInsertar.clicked.connect(self.on_pushButtonInsertar)
        self.pushButtonEliminar.clicked.connect(self.on_pushButtonEliminar)

        self.cargar_comboBox_cursos()


        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Asignaturas"))
        self.label.setText(_translate("Dialog", "Asignaturas"))
        self.pushButtonModificar.setText(_translate("Dialog", "Modificar"))
        self.pushButtonInsertar.setText(_translate("Dialog", "Insertar"))
        self.pushButtonEliminar.setText(_translate("Dialog", "Eliminar"))

    def cargar_comboBox_cursos(self):
        cursos = Curso_Service.Curso_Service.read_curso(Curso_Service)
        for curso in cursos:
            self.comboBoxCurso.addItem(curso.get_curso())
        self.cargar_comboBox_annos()

    def cargar_comboBox_annos(self):
        self.comboBoxAnno.clear()
        annos = Anno_Service.Anno_Service.get_annos_x_curso(Anno_Service, self.comboBoxCurso.currentText())
        for anno in annos:
            self.comboBoxAnno.addItem(str(anno.get_anno()))
        self.cargar_tabla_asignaturas()

    def cargar_tabla_asignaturas(self):
        curso = self.comboBoxCurso.currentText()
        anno = self.comboBoxAnno.currentText()
        asignaturas = Asignatura_Service.Asignatura_Service.get_asignaturas_por_anno(Asignatura_Service, curso, anno)
        self.model.clear()
        self.model.setHorizontalHeaderLabels(["Código", "Nombre", "Horas"])

        self.data = []
        for i in asignaturas:
            items = []
            items.append(QtGui.QStandardItem(str(i[3])))
            items.append(QtGui.QStandardItem(i[0]))
            items.append(QtGui.QStandardItem(str(i[1])))

            self.model.appendRow(items)
        self.tableView.setModel(self.model)
        self.tableView.setCurrentIndex(self.tableView.model().index(-1, -1))

    def on_pushButtonModificar(self):
        if self.tableView.currentIndex().row() == -1:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Seleccione un estudiante")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            i = self.tableView.selectedIndexes()
            row = i[0].row()
            cod_asig = int(self.model.data(self.model.index(row, 0)))
            asig = QtWidgets.QDialog()
            ui = Ui_DialogModificar_Asignatura()
            ui.setupUi(asig, cod_asig)
            asig.exec_()
        self.cargar_tabla_asignaturas()

    def on_pushButtonInsertar(self):
        asig = QtWidgets.QDialog()
        ui = Ui_DialogInsertar()
        ui.setupUi(asig)
        asig.exec_()
        self.cargar_tabla_asignaturas()


    def on_pushButtonEliminar(self):
        if self.tableView.currentIndex().row() == -1:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Seleccione un estudiante")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            i = self.tableView.selectedIndexes()
            row = i[0].row()
            cod_asig = int(self.model.data(self.model.index(row, 0)))
            asig_con_notas =Asignatura_Service.Asignatura_Service.codigo_asignaturas_con_nota(Asignatura_Service)
            asig_con_notas_integers = []
            for i in asig_con_notas:
                asig_con_notas_integers.append(int(i[0]))
            if asig_con_notas_integers.__contains__(cod_asig):
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Warning)
                msg.setText("No se pueden eliminar asignaturas con notas asignadas")
                msg.setWindowTitle("Error")
                msg.exec_()
            else:
                Asignatura_Service.Asignatura_Service.delete_asignatura(Asignatura_Service, cod_asig)
        self.cargar_tabla_asignaturas()